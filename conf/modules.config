/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    /*
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    */

    withName: 'FAS_ANNOTATION' {
        ext.args = [
        params.fas_doAnno_eFeature  ? "--eFeature ${params.fas_doAnno_eFeature}" : '',
        params.fas_doAnno_eInstance ? "--eInstance ${params.fas_doAnno_eInstance}" : '',
        params.fas_doAnno_eFlps     ? "--eFlps ${params.fas_doAnno_eFlps}"     : '',
        params.fas_doAnno_hmmCores  ? "--hmmCores ${params.fas_doAnno_hmmCores}" : '',
        params.fas_doAnno_org       ? "--org ${params.fas_doAnno_org}"         : ''
    ].findAll { it }.join(' ')
    }

    withName: 'FAS_SCORING' {
        ext.args = [
        params.fas_run_eFeature             ? "-f ${params.fas_run_eFeature}"                             : '',
        params.fas_run_eInstance            ? "-i ${params.fas_run_eInstance}"                            : '',
        params.fas_run_eFlps                ? "--eFlps ${params.fas_run_eFlps}"                           : '',
        params.fas_run_org                  ? "--org ${params.fas_run_org}"                               : '',
        params.fas_run_ref_proteome         ? "-r ${params.fas_run_ref_proteome}"                         : '',
        params.fas_run_weight_correction    ? "-g ${params.fas_run_weight_correction}"                    : '',
        params.fas_run_max_overlap_percentage ? "--max_overlap_percentage ${params.fas_run_max_overlap_percentage}" : '',
        params.fas_run_priority_threshold   ? "-t ${params.fas_run_priority_threshold}"                   : '',
        params.fas_run_max_cardinality      ? "-m ${params.fas_run_max_cardinality}"                      : '',
        params.fas_run_paths_limit          ? "--paths_limit ${params.fas_run_paths_limit}"               : '',
        params.fas_run_score_weights        ? "-w ${params.fas_run_score_weights}"                        : ''
    ].findAll { it }.join(' ')
    }

    withName: 'CONCAT_FAS_SCORES' {
        publishDir = params.outdir
    }

    withName: 'SEQUENCES' {
        ext.args = '--default-arg-sequences'
    }

    withName: 'LIBRARY_INITIALIZATION' {
        ext.args = '--default-arg-initialization'
    }

    withName: 'LIBRARY_RESTRUCTURE' {
        ext.args = '--default-arg-restructure'
    }

}
