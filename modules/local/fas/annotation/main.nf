

process FAS_ANNOTATION {

    label 'process_medium'


    input:
    path anno_tools         // Path: Path to annotation tools file
    path spice_library_dir   // Path: Library generated by spice_library.py


    output:
    path "${spice_library_dir}"   , emit: annotated_library_ch
    path "versions.yml"           , emit: versions

    when:
    task.ext.when == null || task.ext.when

    script:
    def args = task.ext.args ?: ''


    """
    # Replace annoTools.txt in spice_library_dir with the one from anno_tools
    cp "${anno_tools}/annoTools.txt" "${spice_library_dir}/fas_data/annoTools.txt"


    # run the annotaion
    source "${anno_tools}/fas.profile"

    fas.doAnno \
        -i "${spice_library_dir}/transcript_data/transcript_set.fasta" \
        -o "${spice_library_dir}/fas_data/" \
        -t "${anno_tools}" \
        -n annotations \
        --cpus ${task.cpus} \
        ${args}


    cat <<-END_VERSIONS > versions.yml
    "${task.process}":
        greedyFas: \$(pip show greedyFAS | awk '/^Version:/ {print \$2}')
    END_VERSIONS
    """

    stub:
    def args = task.ext.args ?: ''


    """


    cat <<-END_VERSIONS > versions.yml
    "${task.process}":
        greedyFas: \$(pip show greedyFAS | awk '/^Version:/ {print \$2}')
    END_VERSIONS
    """
}
